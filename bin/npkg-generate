#!/usr/bin/env ruby

$:.push(File.expand_path(File.dirname(__FILE__) + "/../lib"))

require 'npkg'
require 'json'
require 'optparse'

options = Hash.new
parser = OptionParser.new do |opts|
	opts.banner = "Usage: npkg [options]"
	opts.separator "Generate full dependency map for versioned/non-versioned node module."
	opts.separator "Specific Options:"

	opts.on("-m <mod>", "Specify the mod (Required)") do |mod|
		options[:module] = mod
	end

	opts.on("-v <ver>", "Specify the mod version (Latest by default)") do |ver|
		options[:version] = ver
	end

	opts.on("-r <dependency,range>", Array, "Exclude the versioned dependency from the dependency map (package split)") do |mod|
		if options[:exclusion].nil?
			options[:exclusion] = {mod[0]=>mod[1]}
		else
			options[:exclusion][mod[0]] = mod[1]
		end
	end

	opts.on("-p <path>", "The path to save the json file (Current directory by default)") do |path|
		options[:path] = path
	end

	opts.separator ""
	opts.separator "Common Options:"
	opts.on_tail("-h", "--help", "Show this message") do
		puts opts
		exit
	end

	opts.on_tail("--version", "Show version") do
		puts NPKG::VERSION
		exit
	end
end
parser.parse!(ARGV)

json = NPKG::Tree.new(options[:module],options[:version]).generate(options[:exclusion])
options[:path] ||= "."
open(File.join(options[:path],options[:module] + ".json"),"w") do |f|
	f.write JSON.pretty_generate(json)
end
